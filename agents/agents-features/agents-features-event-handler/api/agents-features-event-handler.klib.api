// Klib ABI Dump
// Targets: [js]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <ai.jetbrains.code.agents:agents-features-event-handler>
final class ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler { // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler|null[0]
    constructor <init>() // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler.<init>|<init>(){}[0]

    final object Feature : ai.grazie.code.agents.core.feature/AIAgentFeature<ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig, ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler> { // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler.Feature|null[0]
        final val key // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler.Feature.key|{}key[0]
            final fun <get-key>(): ai.grazie.code.agents.core.agent.entity/AIAgentStorageKey<ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler.Feature.key.<get-key>|<get-key>(){}[0]

        final fun createInitialConfig(): ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler.Feature.createInitialConfig|createInitialConfig(){}[0]
        final fun install(ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig, ai.grazie.code.agents.core.feature/AIAgentPipeline) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandler.Feature.install|install(ai.grazie.code.agents.local.features.eventHandler.feature.EventHandlerConfig;ai.grazie.code.agents.core.feature.AIAgentPipeline){}[0]
    }
}

final class ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig : ai.grazie.code.agents.local.features.common.config/FeatureConfig { // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig|null[0]
    constructor <init>() // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.<init>|<init>(){}[0]

    final var onAfterLLMCall // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterLLMCall|{}onAfterLLMCall[0]
        final fun <get-onAfterLLMCall>(): kotlin/Function1<kotlin/String, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterLLMCall.<get-onAfterLLMCall>|<get-onAfterLLMCall>(){}[0]
        final fun <set-onAfterLLMCall>(kotlin/Function1<kotlin/String, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterLLMCall.<set-onAfterLLMCall>|<set-onAfterLLMCall>(kotlin.Function1<kotlin.String,kotlin.Unit>){}[0]
    final var onAfterLLMWithToolsCall // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterLLMWithToolsCall|{}onAfterLLMWithToolsCall[0]
        final fun <get-onAfterLLMWithToolsCall>(): kotlin/Function2<kotlin.collections/List<ai.jetbrains.code.prompt.message/Message.Response>, kotlin.collections/List<ai.grazie.code.agents.core.tools/ToolDescriptor>, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterLLMWithToolsCall.<get-onAfterLLMWithToolsCall>|<get-onAfterLLMWithToolsCall>(){}[0]
        final fun <set-onAfterLLMWithToolsCall>(kotlin/Function2<kotlin.collections/List<ai.jetbrains.code.prompt.message/Message.Response>, kotlin.collections/List<ai.grazie.code.agents.core.tools/ToolDescriptor>, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterLLMWithToolsCall.<set-onAfterLLMWithToolsCall>|<set-onAfterLLMWithToolsCall>(kotlin.Function2<kotlin.collections.List<ai.jetbrains.code.prompt.message.Message.Response>,kotlin.collections.List<ai.grazie.code.agents.core.tools.ToolDescriptor>,kotlin.Unit>){}[0]
    final var onAfterNode // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterNode|{}onAfterNode[0]
        final fun <get-onAfterNode>(): kotlin.coroutines/SuspendFunction4<ai.grazie.code.agents.core.agent.entity/AIAgentNodeBase<*, *>, ai.grazie.code.agents.core.agent.entity/AIAgentContextBase, kotlin/Any?, kotlin/Any?, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterNode.<get-onAfterNode>|<get-onAfterNode>(){}[0]
        final fun <set-onAfterNode>(kotlin.coroutines/SuspendFunction4<ai.grazie.code.agents.core.agent.entity/AIAgentNodeBase<*, *>, ai.grazie.code.agents.core.agent.entity/AIAgentContextBase, kotlin/Any?, kotlin/Any?, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAfterNode.<set-onAfterNode>|<set-onAfterNode>(kotlin.coroutines.SuspendFunction4<ai.grazie.code.agents.core.agent.entity.AIAgentNodeBase<*,*>,ai.grazie.code.agents.core.agent.entity.AIAgentContextBase,kotlin.Any?,kotlin.Any?,kotlin.Unit>){}[0]
    final var onAgentFinished // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAgentFinished|{}onAgentFinished[0]
        final fun <get-onAgentFinished>(): kotlin.coroutines/SuspendFunction2<kotlin/String, kotlin/String?, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAgentFinished.<get-onAgentFinished>|<get-onAgentFinished>(){}[0]
        final fun <set-onAgentFinished>(kotlin.coroutines/SuspendFunction2<kotlin/String, kotlin/String?, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAgentFinished.<set-onAgentFinished>|<set-onAgentFinished>(kotlin.coroutines.SuspendFunction2<kotlin.String,kotlin.String?,kotlin.Unit>){}[0]
    final var onAgentRunError // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAgentRunError|{}onAgentRunError[0]
        final fun <get-onAgentRunError>(): kotlin.coroutines/SuspendFunction2<kotlin/String, kotlin/Throwable, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAgentRunError.<get-onAgentRunError>|<get-onAgentRunError>(){}[0]
        final fun <set-onAgentRunError>(kotlin.coroutines/SuspendFunction2<kotlin/String, kotlin/Throwable, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onAgentRunError.<set-onAgentRunError>|<set-onAgentRunError>(kotlin.coroutines.SuspendFunction2<kotlin.String,kotlin.Throwable,kotlin.Unit>){}[0]
    final var onBeforeAgentStarted // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeAgentStarted|{}onBeforeAgentStarted[0]
        final fun <get-onBeforeAgentStarted>(): kotlin.coroutines/SuspendFunction2<ai.grazie.code.agents.core.agent.entity/AIAgentStrategy, ai.grazie.code.agents.core.agent/AIAgent, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeAgentStarted.<get-onBeforeAgentStarted>|<get-onBeforeAgentStarted>(){}[0]
        final fun <set-onBeforeAgentStarted>(kotlin.coroutines/SuspendFunction2<ai.grazie.code.agents.core.agent.entity/AIAgentStrategy, ai.grazie.code.agents.core.agent/AIAgent, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeAgentStarted.<set-onBeforeAgentStarted>|<set-onBeforeAgentStarted>(kotlin.coroutines.SuspendFunction2<ai.grazie.code.agents.core.agent.entity.AIAgentStrategy,ai.grazie.code.agents.core.agent.AIAgent,kotlin.Unit>){}[0]
    final var onBeforeLLMCall // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeLLMCall|{}onBeforeLLMCall[0]
        final fun <get-onBeforeLLMCall>(): kotlin/Function1<ai.jetbrains.code.prompt.dsl/Prompt, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeLLMCall.<get-onBeforeLLMCall>|<get-onBeforeLLMCall>(){}[0]
        final fun <set-onBeforeLLMCall>(kotlin/Function1<ai.jetbrains.code.prompt.dsl/Prompt, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeLLMCall.<set-onBeforeLLMCall>|<set-onBeforeLLMCall>(kotlin.Function1<ai.jetbrains.code.prompt.dsl.Prompt,kotlin.Unit>){}[0]
    final var onBeforeLLMWithToolsCall // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeLLMWithToolsCall|{}onBeforeLLMWithToolsCall[0]
        final fun <get-onBeforeLLMWithToolsCall>(): kotlin/Function2<ai.jetbrains.code.prompt.dsl/Prompt, kotlin.collections/List<ai.grazie.code.agents.core.tools/ToolDescriptor>, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeLLMWithToolsCall.<get-onBeforeLLMWithToolsCall>|<get-onBeforeLLMWithToolsCall>(){}[0]
        final fun <set-onBeforeLLMWithToolsCall>(kotlin/Function2<ai.jetbrains.code.prompt.dsl/Prompt, kotlin.collections/List<ai.grazie.code.agents.core.tools/ToolDescriptor>, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeLLMWithToolsCall.<set-onBeforeLLMWithToolsCall>|<set-onBeforeLLMWithToolsCall>(kotlin.Function2<ai.jetbrains.code.prompt.dsl.Prompt,kotlin.collections.List<ai.grazie.code.agents.core.tools.ToolDescriptor>,kotlin.Unit>){}[0]
    final var onBeforeNode // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeNode|{}onBeforeNode[0]
        final fun <get-onBeforeNode>(): kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.agent.entity/AIAgentNodeBase<*, *>, ai.grazie.code.agents.core.agent.entity/AIAgentContextBase, kotlin/Any?, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeNode.<get-onBeforeNode>|<get-onBeforeNode>(){}[0]
        final fun <set-onBeforeNode>(kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.agent.entity/AIAgentNodeBase<*, *>, ai.grazie.code.agents.core.agent.entity/AIAgentContextBase, kotlin/Any?, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onBeforeNode.<set-onBeforeNode>|<set-onBeforeNode>(kotlin.coroutines.SuspendFunction3<ai.grazie.code.agents.core.agent.entity.AIAgentNodeBase<*,*>,ai.grazie.code.agents.core.agent.entity.AIAgentContextBase,kotlin.Any?,kotlin.Unit>){}[0]
    final var onStrategyFinished // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onStrategyFinished|{}onStrategyFinished[0]
        final fun <get-onStrategyFinished>(): kotlin.coroutines/SuspendFunction2<kotlin/String, kotlin/String, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onStrategyFinished.<get-onStrategyFinished>|<get-onStrategyFinished>(){}[0]
        final fun <set-onStrategyFinished>(kotlin.coroutines/SuspendFunction2<kotlin/String, kotlin/String, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onStrategyFinished.<set-onStrategyFinished>|<set-onStrategyFinished>(kotlin.coroutines.SuspendFunction2<kotlin.String,kotlin.String,kotlin.Unit>){}[0]
    final var onStrategyStarted // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onStrategyStarted|{}onStrategyStarted[0]
        final fun <get-onStrategyStarted>(): kotlin.coroutines/SuspendFunction1<ai.grazie.code.agents.core.agent.entity/AIAgentStrategy, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onStrategyStarted.<get-onStrategyStarted>|<get-onStrategyStarted>(){}[0]
        final fun <set-onStrategyStarted>(kotlin.coroutines/SuspendFunction1<ai.grazie.code.agents.core.agent.entity/AIAgentStrategy, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onStrategyStarted.<set-onStrategyStarted>|<set-onStrategyStarted>(kotlin.coroutines.SuspendFunction1<ai.grazie.code.agents.core.agent.entity.AIAgentStrategy,kotlin.Unit>){}[0]
    final var onToolCall // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCall|{}onToolCall[0]
        final fun <get-onToolCall>(): kotlin.coroutines/SuspendFunction2<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCall.<get-onToolCall>|<get-onToolCall>(){}[0]
        final fun <set-onToolCall>(kotlin.coroutines/SuspendFunction2<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCall.<set-onToolCall>|<set-onToolCall>(kotlin.coroutines.SuspendFunction2<ai.grazie.code.agents.core.tools.Tool<*,*>,ai.grazie.code.agents.core.tools.Tool.Args,kotlin.Unit>){}[0]
    final var onToolCallFailure // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCallFailure|{}onToolCallFailure[0]
        final fun <get-onToolCallFailure>(): kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, kotlin/Throwable, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCallFailure.<get-onToolCallFailure>|<get-onToolCallFailure>(){}[0]
        final fun <set-onToolCallFailure>(kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, kotlin/Throwable, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCallFailure.<set-onToolCallFailure>|<set-onToolCallFailure>(kotlin.coroutines.SuspendFunction3<ai.grazie.code.agents.core.tools.Tool<*,*>,ai.grazie.code.agents.core.tools.Tool.Args,kotlin.Throwable,kotlin.Unit>){}[0]
    final var onToolCallResult // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCallResult|{}onToolCallResult[0]
        final fun <get-onToolCallResult>(): kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, ai.grazie.code.agents.core.tools/ToolResult?, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCallResult.<get-onToolCallResult>|<get-onToolCallResult>(){}[0]
        final fun <set-onToolCallResult>(kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, ai.grazie.code.agents.core.tools/ToolResult?, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolCallResult.<set-onToolCallResult>|<set-onToolCallResult>(kotlin.coroutines.SuspendFunction3<ai.grazie.code.agents.core.tools.Tool<*,*>,ai.grazie.code.agents.core.tools.Tool.Args,ai.grazie.code.agents.core.tools.ToolResult?,kotlin.Unit>){}[0]
    final var onToolValidationError // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolValidationError|{}onToolValidationError[0]
        final fun <get-onToolValidationError>(): kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, kotlin/String, kotlin/Unit> // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolValidationError.<get-onToolValidationError>|<get-onToolValidationError>(){}[0]
        final fun <set-onToolValidationError>(kotlin.coroutines/SuspendFunction3<ai.grazie.code.agents.core.tools/Tool<*, *>, ai.grazie.code.agents.core.tools/Tool.Args, kotlin/String, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig.onToolValidationError.<set-onToolValidationError>|<set-onToolValidationError>(kotlin.coroutines.SuspendFunction3<ai.grazie.code.agents.core.tools.Tool<*,*>,ai.grazie.code.agents.core.tools.Tool.Args,kotlin.String,kotlin.Unit>){}[0]
}

final fun (ai.grazie.code.agents.core.agent/AIAgent.FeatureContext).ai.grazie.code.agents.local.features.eventHandler.feature/handleEvents(kotlin/Function1<ai.grazie.code.agents.local.features.eventHandler.feature/EventHandlerConfig, kotlin/Unit>) // ai.grazie.code.agents.local.features.eventHandler.feature/handleEvents|handleEvents@ai.grazie.code.agents.core.agent.AIAgent.FeatureContext(kotlin.Function1<ai.grazie.code.agents.local.features.eventHandler.feature.EventHandlerConfig,kotlin.Unit>){}[0]
